---
import fetchApi from "src/lib/strapi";
import type Article from "src/interfaces/article";
import Card from "./Card.astro";

const { tags } = Astro.props;

console.log(tags);

const articles = await fetchApi<Article[]>({
  endpoint: "articles",
  wrappedByKey: "data",
  query: {
    pagination: {
      limit: 4
    },
  },
});
---

<section class="flex flex-col mt-12 border-t">
  <p class="text-2xl text-center">Read More</p>
  <div class="grid sm:grid-cols-2 gap-4">
    {
      articles?.map((post) => {
        return <Card post={post} />;
      })
    }
  </div>
</section>

<script is:inline>
  var lazyImages = [].slice.call(
    document.querySelectorAll(".lazy-loaded-image.lazy")
  );
  let lazyImageObserver = new IntersectionObserver(function (
    entries,
    observer
  ) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        let lazyImage = entry.target;
        lazyImage.src = lazyImage.dataset.src;
        lazyImage.classList.remove("lazy");
        lazyImage.classList.add("loaded");
        lazyImageObserver.unobserve(lazyImage);
      }
    });
  });
  lazyImages.forEach(function (lazyImage) {
    lazyImageObserver.observe(lazyImage);
  });
</script>
